Generate an API key with given link below https://openweathermap.org/guide Print the current weather data(temp) in console- By lat lang along with country name

Do the below programs in anonymous function and IIFE

1....Print odd numbers in an array --------------------------------------------------------------------------


const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split("").map(Number)
var odd = function(x)
{       let b = []
    for(let i=0;i<x.length;i++)
    {
        if(x[i]%2!==0)
        {
            b.push(x[i])
        }
    }
    console.log(...b)
}
odd(a);
(function(){
   let b = []
    for(let i=0;i<a.length;i++)
    {
        if(a[i]%2!==0)
        {
            b.push(a[i])
        }
    }
    console.log(...b) 
})(a);
})


2...... Convert all the strings to title caps in a string array --------------------------------------------------

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ")
var caps = function(x){
    for(let i=0;i<x.length;i++)
    {
       x[i]=x[i].split("")
       x[i][0]=x[i][0].toUpperCase()
       x[i]=x[i].join("")
       
       
    }
    
    return x.join(" ");
}
console.log(caps(a));

(function(){
    for(let i=0;i<a.length;i++)
    {
       a[i]=a[i].split("")
       a[i][0]=a[i][0].toUpperCase()
       a[i]=a[i].join("")
    }
    console.log(...a)
})(a)
})

3....Sum of all numbers in an array -----------------------------------------------------------------------------

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ").map(Number)
var sum = function(x){
    let tot = 0
    for(let i=0;i<x.length;i++)
    {
        tot+=x[i]      
    }
    
    return tot
}
console.log(sum(a));

(function(){
    
       let tot = 0
    for(let i=0;i<a.length;i++)
    {
        tot+=a[i]      
    
    }
    console.log(tot)
})(a)
})


4.....Return all the prime numbers in an array --------------------------------

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ").map(Number)
var prime = function(x)
{   
  
    var b = [];
    for(let i in x)
    {   
        let count =0
        if(x[i]==1)
            {
              count =1
              

            }
        for(let j=2;j<=x[i]/2;j++)
        {
            if(x[i]%j===0)
            {
                count=1;
                break;
            }
        }
    if(count!=1)
        {
            b.push(x[i]) 
        }    
    
    }
console.log(...b)    
}
prime(a);

(function(x){
    var b = [];
    for(let i in x)
    {   
        let count =0
        if(x[i]==1)
            {
              count =1
              

            }
        for(let j=2;j<=x[i]/2;j++)
        {
            if(x[i]%j===0)
            {
                count=1;
                break;
            }
        }
    if(count!=1)
        {
            b.push(x[i]) 
        }    
    
    }
console.log(...b)    
    
})(a)
})

5. Return all the palindromes in an array-------------------------------------------------------------------------------

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ")

var palindrome = function(x)
{  let b = []; 
  for(let i in x)
  {     let count =0;
        
        x[i]=x[i].split("")
        for(let j=0;j<Math.abs((x[i].length)/2);j++)
        {
            if(x[i][j]!=x[i][x[i].length-1-j])
            {
                count=1;
                x[i]=x[i].join("")
                break;
            }
        
        }
        if(count===0)
        { 
          x[i]= x[i].join("")
           b.push(x[i])
        }
  }
  return b.join(' ');
      
}
console.log(palindrome(a));

(function(x){
    let b = [];
    for(let i in x)
  {     let count =0;
         
        x[i]=x[i].split("")
        for(let j=0;j<Math.abs((x[i].length)/2);j++)
        {
            if(x[i][j]!=x[i][x[i].length-1-j])
            {
                count=1;
                x[i]=x[i].join("")
                break;
            }
        
        }
        if(count===0)
        { 
          x[i]= x[i].join("")
           b.push(x[i])
        }
  }
console.log(b.join(" "))    
    
})(a)
})
Return median of two sorted arrays of same size ---------------------------------------------------------
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ").map(Number)
let b = userInput[1].split(" ").map(Number)
var median = function(x,y)
{  
    x.push(...y)
    x.sort((a,b)=>a-b)
    let c = x.length/2
    console.log((x[c]+x[c-1])/2)
}
median(a,b);
(function(x){
    
    x.sort((a,b)=>a-b)
    let c = x.length/2
    console.log((x[c]+x[c-1])/2)
})(a)
})


Remove duplicates from an array ----------------------------------------------------------------------------
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ").map(Number)


var duplicates = function(x)
{   
    let b = []
    for(let i in x)
    {
        if(b.includes(x[i])===false)
        {
            b.push(x[i])
        }
    }
    console.log(b)
}
duplicates(a);
(function(x){
    
    
    let b = []
    for(let i in x)
    {
        if(b.includes(x[i])===false)
        {
            b.push(x[i])
        }
    }
    console.log(b)
})(a)
})
Rotate an array by k times and return the rotated array----------------------------------------------------

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split(" ").map(Number)
let b = +userInput[1]


var rotate = function(x,y)
{   
    for(let i=0;i<y;i++)
    {
       x.unshift(x.pop())
       
    }
    console.log(...x)
}
rotate(a,b);
(function(x,y){
    
    for(let i=0;i<y;i++)
    {
       x.unshift(x.pop())
       
    }
    console.log(...x)
    
})(a,b)
})